
    public int[] Nums = { 2, 1, 7, 5, 6, 9, 3, 10, 4, 8 };

    /// <summary>
    /// 冒泡排序
    /// 比较相邻的元素。如果第一个比第二个大，就交换他们两个。
    /// 对每一对相邻元素作同样的工作，从开始第一对到结尾的最后一对。这步做完后，最后的元素会是最大的数。
    /// 针对所有的元素重复以上的步骤，除了最后一个。
    /// 持续每次对越来越少的元素重复上面的步骤，直到没有任何一对数字需要比较。
    /// </summary>
    void BubbleSort() {
        Debug.Log("执行冒泡排序:");
        int[] Array = Nums;
        for (int i = 0; i < Array.Length; i++) {
            for (int j = 0; j < Array.Length; j++)
            {
                if (Array[i] < Array[j]) {
                    int temp = Array[i];
                    Array[i] = Array[j];
                    Array[j] = temp;
                }
            }
        }
        string LogResult = "冒泡排序结果：";
        for (int i = 0; i < Array.Length; i++) {
            LogResult += Array[i] + "  ";
        }
        Debug.Log(LogResult);
    }

    /// <summary>
    /// 插入排序
    /// 将第一待排序序列第一个元素看做一个有序序列，把第二个元素到最后一个元素当成是未排序序列。
    /// 从头到尾依次扫描未排序序列，将扫描到的每个元素插入有序序列的适当位置。（如果待插入的元素与有序序列中的某个元素相等，则将待插入元素插入到相等元素的后面。）
    /// </summary>
    void InsertSort() {
        Debug.Log("执行插入排序:");
        int[] Array = Nums;

        for (int i = 1; i < Array.Length; i++)
        {
            int temp = Array[i];
            for (int j = i - 1; j >= 0; j--)
            {
                if (Array[i] < Array[j])
                {
                    Array[j + 1] = Array[j];
                    Array[j] = temp;
                }
                else
                {
                    break;
                }
            }
        }

        string LogResult = "插入排序结果：";
        for (int i = 0; i < Array.Length; i++)
        {
            LogResult += Array[i] + "  ";
        }
        Debug.Log(LogResult);
    }

    /// <summary>
    /// 快速排序
    /// 从数列中挑出一个元素，称为 "基准"（pivot）;
    /// 重新排序数列，所有元素比基准值小的摆放在基准前面，所有元素比基准值大的摆在基准的后面（相同的数可以到任一边）。在这个分区退出之后，该基准就处于数列的中间位置。这个称为分区（partition）操作；
    /// 递归地（recursive）把小于基准值元素的子数列和大于基准值元素的子数列排序；
    /// </summary>
    void QuickSort() {
        Debug.Log("执行快速排序:");
        int[] Array = Nums;

        string LogResult = "快速排序结果：";
        for (int i = 0; i < Array.Length; i++)
        {
            LogResult += Array[i] + "  ";
        }
        Debug.Log(LogResult);
    }

